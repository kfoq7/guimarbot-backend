---
import Layout from '@/layouts/Layout.astro'
import PreviewCourseVideo from '@/sections/PreviewCourseVideo.astro'
import CourseActionsButton from '@/components/Course/CourseActionsButton'
import { authStore } from '@/stores/authStore'
import { $courseFilters } from '@/stores/courseFiltersStore'
import type { Course } from '@/types/Course'

const { courseName } = Astro.params

const response = await fetch(
  `${import.meta.env.API_URL}/course/find-by-title?title=${courseName}`
)
const course = (await response.json()) as Course

const { id, title, description, teacherName, price, durationHours, lessons } =
  course
---

<Layout title={`Course - ${courseName?.replace(/-/g, ' ')}`}>
  <main class="mx-auto grid max-w-7xl gap-6 px-2 pt-5 lg:grid-cols-[1fr_330px]">
    <div class="col-[1/2] row-[1/2] flex px-4 lg:col-[1/3]">
      <a href="/" class="transition-colors hover:underline">Inicio</a>
    </div>

    <!-- <div class="relative col-[1/2] row-[2/3] px-4"> -->
    <PreviewCourseVideo />

    <div class="col-[1/2] row-[3/4] px-4">
      <h1 class="text-2xl font-bold sm:text-3xl md:text-4xl">{title}</h1>
      <div class="mt-6">
        <h2 class="text-lg font-bold md:text-xl">{description}</h2>
        <p>{description}</p>
      </div>
    </div>

    <div class="col-[1/2] row-[5/5] px-4">
      <div>
        <h2 class="text-lg md:text-lg">Stack</h2>
        <ul>
          <li>JavaScript</li>
        </ul>
      </div>
      <div class="mt-6 rounded-2xl border p-5">
        <h2 class="text-lg font-bold md:text-xl">Lo que aprenderas</h2>
        <ul class="mt-4 grid grid-cols-1 gap-x-14 gap-y-5 md:grid-cols-2">
          <li>Noveades de promesas</li>
          <li>Mejora la legibilidad de codigo</li>
        </ul>
      </div>
      <div class="mt-6 flex flex-col gap-2.5">
        <h2 class="text-lg font-bold md:text-xl">Contenido del curso</h2>
        <div class="flex flex-wrap items-center gap-2 text-sm">
          <span>{durationHours}</span>
        </div>
        <ul class="flex flex-col gap-y-4">
          {
            lessons.map(({ title, description }) => (
              <li class="rounded-xl border border-[#bdcbdf] bg-[#404a58]">
                <div class="grid grid-rows-[min-content_0fr] transition-[grid-template-rows] has-[input:checked]:grid-rows-[min-content_1fr]">
                  <label
                    for={title}
                    class="relative flex cursor-pointer select-none p-4"
                  >
                    <input
                      checked
                      id={title}
                      type="checkbox"
                      class="peer hidden"
                    />
                    <div class="flex flex-grow gap-2.5">
                      <div>
                        <h3 class="text-sm text-[#0097ff]">Capitulo 1</h3>
                        <p class="text-white">
                          Nuevos metodos para colecciones
                        </p>
                      </div>
                    </div>
                  </label>
                  <div class="overflow-hidden rounded-xl bg-box">
                    <ul class="py-2">
                      <li>
                        <a
                          href="/curso/aprende-lo-ultimo-de-javascript/00-nuevos-metodos-para-colecciones/00-introduccion"
                          class="hover:bg-brand-gray/10 relative flex w-full items-center justify-between gap-4 overflow-hidden px-4 py-2 text-sm text-white transition"
                        >
                          <p class="flex flex-grow items-center gap-1">
                            {description}
                          </p>
                          <span class="text-brand-blue block min-w-[52px] text-right">
                            18s
                          </span>
                        </a>
                      </li>
                    </ul>
                  </div>
                </div>
              </li>
            ))
          }
        </ul>
      </div>
    </div>

    <div class="col-[1/2] row-[4/5] lg:col-[2/3] lg:row-[2/6] lg:pr-4">
      <section class="flex flex-col gap-4 rounded-3xl border p-5">
        <h3 class="text-lg font-bold md:text-xl">El curso incluye</h3>
        <ul class="flex flex-col gap-4">
          <li class="flex items-center justify-between">
            <p class="flex flex-1 items-center gap-2">Horas de video:</p>
            <span>{durationHours}</span>
          </li>
          <li class="flex items-center justify-between">
            <p class="flex flex-1 items-center gap-2">Lenguaje:</p>
            <span>Español</span>
          </li>
        </ul>
        <span>Price: {price}$</span>

        <CourseActionsButton client:only="react" userId={1} courseId={id} />
      </section>
      <section class="mt-8 flex flex-col gap-4">
        <h3 class="text-lg font-bold md:text-xl">Docente</h3>
        <header class="flex gap-3">
          <div>
            <h4>{teacherName}</h4>
            <p>Creador de contendio</p>
          </div>
        </header>
        <p>
          Programación JavaScript y Desarrollo Web. Reconocido Google Developer
          Expert, Microsoft.
        </p>
      </section>
    </div>
  </main>
</Layout>

<!-- <script>
  import { $isPreviewPlay } from '@/stores/videoStore'

  const playButton = document.querySelector('.lty-play-button')
  if (playButton) {
    playButton.addEventListener('click', () => {
      $isPreviewPlay.set(!$isPreviewPlay.get())
    })
  }
</script> -->

<script>
  import { $ } from '@/lib/dom-selector'
  import { addCourseToCart } from '@/stores/cartStore'

  const buyBtn = $('#buy-btn')
  if (buyBtn) {
    buyBtn.addEventListener('click', () => {
      const courseId = Number(buyBtn.dataset.courseId) || 0
      if (courseId === 0) return
      addCourseToCart(courseId)
    })
  }
</script>
