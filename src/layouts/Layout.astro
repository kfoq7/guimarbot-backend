---
import { ViewTransitions } from 'astro:transitions'
import Footer from '@/components/Footer.astro'
import Header from '@/components/Header.astro'

interface Props {
  title: string
}

const { title } = Astro.props
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Figtree:ital,wght@0,300..900;1,300..900&display=swap"
      rel="stylesheet"
    />
    <ViewTransitions />
  </head>
  <body class="overflow-x-hidden font-sans">
    <Header />

    <slot />

    <Footer />
  </body>
</html>

<style is:global>
  html {
    font-family:
      system-ui,
      -apple-system,
      BlinkMacSystemFont,
      'Segoe UI',
      Roboto,
      Oxygen,
      Ubuntu,
      Cantarell,
      'Open Sans',
      'Helvetica Neue',
      sans-serif;
    background-color: #f6f6f6;
  }

  @keyframes fade-in {
    from {
      opacity: 0;
    }
  }
</style>

<script>
  if (document.startViewTransition) {
    window.navigation.addEventListener('navigate', event => {
      const toUrl = new URL(event.destination.url)

      if (location.origin !== toUrl.origin) return

      event.intercept({
        async handler() {
          const response = await fetch(toUrl.pathname)
          const text = await response.text()

          const [, data] = text.match(/<body>([\s\S]*)<\/body>/i)

          document.startViewTransition(() => {
            document.body.innerHTML = data
            document.documentElement.scrollTop = 0
          })
        }
      })
    })
  }
</script>
